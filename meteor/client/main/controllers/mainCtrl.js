angular.module("dice")  .controller('RollCtrl', function ($scope, $stateParams, $timeout) { //took out roller    //var _ = Meteor.npmRequire('lodash');    //var socket = Meteor.npmRequired('socket.io-client')();      $scope.clientId = "seven";      $scope.members = [];      $scope.member = {clientId: $scope.clientId};      $scope.diceToRoll = [];      $scope.diceColor = '#cc0000';      $scope.roll = {        disabled: false,        time: new Date(),        values: [],      };      // socket.on('groups:update:members', function (data) {      //   $scope.$apply(function () {      //     $scope.members = getRollStats(data);      //   });      // });      var getRollStats = function () {        // _.forEach(data, function (member, index, array) {        //   array[index].rollStats = {        //     dc: (_.find(member.rolls, {die: 20})) ?        //       _.find(member.rolls, {die: 20}).value :        //       null,        //     sum: _.sum(_.map(member.rolls, 'value'))        //   };        // });        var playersRoll = {          diceColor: "#cc0000",          rolls: [            {              die: 6,              value: Math.floor((Math.random() * 12) % 6) + 1            },            {              die: 6,              value: Math.floor((Math.random() * 12) % 6) + 1            }          ],          rollStats: {            sum: 0          }        };        //calculate the sum of the dice        for (var i = 0; i < playersRoll.rolls.length; i++) {          playersRoll.rollStats.sum += playersRoll.rolls[i].value;        }        return playersRoll;      };      $scope.setClientName = function () {        $scope.clientName = prompt('Enter your name:'); //localstoraged      };      $scope.addDie = function (type) {        console.log("die added");        $scope.diceToRoll.push(type);      };      $scope.removeDie = function (index) {        $scope.diceToRoll.splice(index, 1);      };      $scope.removeAllDice = function (index) {        $scope.diceToRoll = [];      };      $scope.$watch('diceColor', function (newValue, oldValue) {        if (typeof newValue === 'undefined') {          return;        }        $scope.diceColor = newValue;    //localstoraged      });      $scope.roll = function () {        console.log("rolling");        $scope.roll.time = new Date();        $scope.roll.disabled = true;        $scope.roll.values = [];        // $scope.$apply(function () {        //      $scope.members = getRollStats(data);        //    });           $scope.playersRoll = getRollStats();           //console.log("scope members", $scope.playersRoll);        // socket.emit('groups:roll', {        //   groupId: $stateParams.groupId,        //   clientId: $scope.clientId,    //localstoraged        //   dice: $scope.diceToRoll        // });        //gets: groups[groupIndex].members        _.forEach($scope.diceToRoll, function (die) {          //$scope.roll.values.push(roller.roll(die));        });        $timeout(function () {          $scope.roll.disabled = false;        }, 1500)      };});